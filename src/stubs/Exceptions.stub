<?php

namespace App\Helpers;

use Throwable;
use Illuminate\Http\Request;

class Exceptions
{
    public static function render(Throwable $exception, Request $request)
    {
        if (! ($request->expectsJson() || $request->is('api/*'))) {
            return null;
        }

        if ($exception instanceof \Illuminate\Database\Eloquent\ModelNotFoundException) {
            return \App\Responses\ApiResponse::notFound('Record not found.');
        }

        if ($exception instanceof \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
            && $exception->getPrevious() instanceof \Illuminate\Database\Eloquent\ModelNotFoundException) {
            return \App\Responses\ApiResponse::notFound('Record not found.');
        }

        if ($exception instanceof \Illuminate\Validation\ValidationException) {
            $firstError = collect($exception->errors())->flatten()->first();
            return \App\Responses\ApiResponse::validationError($firstError, 422, $exception->errors());
        }

        if ($exception instanceof \Illuminate\Auth\AuthenticationException) {
            return \App\Responses\ApiResponse::unauthorized();
        }

        if ($exception instanceof \Illuminate\Auth\Access\AuthorizationException) {
            return \App\Responses\ApiResponse::forbidden('You do not have permission to perform this action.', 403);
        }

        $statusCode = method_exists($exception, 'getStatusCode') ? $exception->getStatusCode() : 500;
        return \App\Responses\ApiResponse::error($exception->getMessage() ?: 'Server error.', $statusCode);
    }
}
